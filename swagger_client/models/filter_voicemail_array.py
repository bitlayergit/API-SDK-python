# coding: utf-8

"""
    Phone.com API

    This is a Phone.com api Swagger definition

    OpenAPI spec version: 1.0.0
    Contact: apisupport@phone.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class FilterVoicemailArray(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        '_from': 'str',
        'to': 'str',
        'is_new': 'str',
        'created_at': 'int',
        'extension': 'str'
    }

    attribute_map = {
        'id': 'id',
        '_from': 'from',
        'to': 'to',
        'is_new': 'is_new',
        'created_at': 'created_at',
        'extension': 'extension'
    }

    def __init__(self, id=None, _from=None, to=None, is_new=None, created_at=None, extension=None):
        """
        FilterVoicemailArray - a model defined in Swagger
        """

        self._id = None
        self.__from = None
        self._to = None
        self._is_new = None
        self._created_at = None
        self._extension = None

        if id is not None:
          self.id = id
        if _from is not None:
          self._from = _from
        if to is not None:
          self.to = to
        if is_new is not None:
          self.is_new = is_new
        if created_at is not None:
          self.created_at = created_at
        if extension is not None:
          self.extension = extension

    @property
    def id(self):
        """
        Gets the id of this FilterVoicemailArray.

        :return: The id of this FilterVoicemailArray.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this FilterVoicemailArray.

        :param id: The id of this FilterVoicemailArray.
        :type: str
        """

        self._id = id

    @property
    def _from(self):
        """
        Gets the _from of this FilterVoicemailArray.

        :return: The _from of this FilterVoicemailArray.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """
        Sets the _from of this FilterVoicemailArray.

        :param _from: The _from of this FilterVoicemailArray.
        :type: str
        """

        self.__from = _from

    @property
    def to(self):
        """
        Gets the to of this FilterVoicemailArray.

        :return: The to of this FilterVoicemailArray.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """
        Sets the to of this FilterVoicemailArray.

        :param to: The to of this FilterVoicemailArray.
        :type: str
        """

        self._to = to

    @property
    def is_new(self):
        """
        Gets the is_new of this FilterVoicemailArray.

        :return: The is_new of this FilterVoicemailArray.
        :rtype: str
        """
        return self._is_new

    @is_new.setter
    def is_new(self, is_new):
        """
        Sets the is_new of this FilterVoicemailArray.

        :param is_new: The is_new of this FilterVoicemailArray.
        :type: str
        """

        self._is_new = is_new

    @property
    def created_at(self):
        """
        Gets the created_at of this FilterVoicemailArray.

        :return: The created_at of this FilterVoicemailArray.
        :rtype: int
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """
        Sets the created_at of this FilterVoicemailArray.

        :param created_at: The created_at of this FilterVoicemailArray.
        :type: int
        """

        self._created_at = created_at

    @property
    def extension(self):
        """
        Gets the extension of this FilterVoicemailArray.

        :return: The extension of this FilterVoicemailArray.
        :rtype: str
        """
        return self._extension

    @extension.setter
    def extension(self, extension):
        """
        Sets the extension of this FilterVoicemailArray.

        :param extension: The extension of this FilterVoicemailArray.
        :type: str
        """

        self._extension = extension

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, FilterVoicemailArray):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
