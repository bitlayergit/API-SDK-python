# coding: utf-8

"""
    Phone.com API

    This is a Phone.com api Swagger definition

    OpenAPI spec version: 1.0.0
    Contact: apisupport@phone.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ReplaceExtensionParams(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, voicemail_greeting_alternate=None, name_greeting=None, name=None, timezone=None, include_in_directory=None, extension=None, enable_outbound_calls=None, usage_type=None, voicemail_password=None, full_name=None, enable_call_waiting=None, voicemail_greeting_standard=None, voicemail_greeting_type=None, caller_id=None, local_area_code=None, voicemail_enabled=None, voicemail_greeting_enable_leave_message_prompt=None, voicemail_transcription=None, voicemail_notifications_emails=None, voicemail_notifications_sms=None, call_notifications_emails=None, call_notifications_sms=None, route=None):
        """
        ReplaceExtensionParams - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'voicemail_greeting_alternate': 'object',
            'name_greeting': 'object',
            'name': 'str',
            'timezone': 'str',
            'include_in_directory': 'bool',
            'extension': 'int',
            'enable_outbound_calls': 'bool',
            'usage_type': 'str',
            'voicemail_password': 'int',
            'full_name': 'str',
            'enable_call_waiting': 'bool',
            'voicemail_greeting_standard': 'object',
            'voicemail_greeting_type': 'str',
            'caller_id': 'str',
            'local_area_code': 'int',
            'voicemail_enabled': 'bool',
            'voicemail_greeting_enable_leave_message_prompt': 'bool',
            'voicemail_transcription': 'str',
            'voicemail_notifications_emails': 'list[str]',
            'voicemail_notifications_sms': 'str',
            'call_notifications_emails': 'list[str]',
            'call_notifications_sms': 'str',
            'route': 'list[str]'
        }

        self.attribute_map = {
            'voicemail_greeting_alternate': 'voicemail[greeting][alternate]',
            'name_greeting': 'name_greeting',
            'name': 'name',
            'timezone': 'timezone',
            'include_in_directory': 'include_in_directory',
            'extension': 'extension',
            'enable_outbound_calls': 'enable_outbound_calls',
            'usage_type': 'usage_type',
            'voicemail_password': 'voicemail[password]',
            'full_name': 'full_name',
            'enable_call_waiting': 'enable_call_waiting',
            'voicemail_greeting_standard': 'voicemail[greeting][standard]',
            'voicemail_greeting_type': 'voicemail[greeting][type]',
            'caller_id': 'caller_id',
            'local_area_code': 'local_area_code',
            'voicemail_enabled': 'voicemail[enabled]',
            'voicemail_greeting_enable_leave_message_prompt': 'voicemail[greeting][enable_leave_message_prompt]',
            'voicemail_transcription': 'voicemail[transcription]',
            'voicemail_notifications_emails': 'voicemail[notifications][emails]',
            'voicemail_notifications_sms': 'voicemail[notifications][sms]',
            'call_notifications_emails': 'call_notifications[emails]',
            'call_notifications_sms': 'call_notifications[sms]',
            'route': 'route'
        }

        self._voicemail_greeting_alternate = voicemail_greeting_alternate
        self._name_greeting = name_greeting
        self._name = name
        self._timezone = timezone
        self._include_in_directory = include_in_directory
        self._extension = extension
        self._enable_outbound_calls = enable_outbound_calls
        self._usage_type = usage_type
        self._voicemail_password = voicemail_password
        self._full_name = full_name
        self._enable_call_waiting = enable_call_waiting
        self._voicemail_greeting_standard = voicemail_greeting_standard
        self._voicemail_greeting_type = voicemail_greeting_type
        self._caller_id = caller_id
        self._local_area_code = local_area_code
        self._voicemail_enabled = voicemail_enabled
        self._voicemail_greeting_enable_leave_message_prompt = voicemail_greeting_enable_leave_message_prompt
        self._voicemail_transcription = voicemail_transcription
        self._voicemail_notifications_emails = voicemail_notifications_emails
        self._voicemail_notifications_sms = voicemail_notifications_sms
        self._call_notifications_emails = call_notifications_emails
        self._call_notifications_sms = call_notifications_sms
        self._route = route

    @property
    def voicemail_greeting_alternate(self):
        """
        Gets the voicemail_greeting_alternate of this ReplaceExtensionParams.
        Recording lookup object

        :return: The voicemail_greeting_alternate of this ReplaceExtensionParams.
        :rtype: object
        """
        return self._voicemail_greeting_alternate

    @voicemail_greeting_alternate.setter
    def voicemail_greeting_alternate(self, voicemail_greeting_alternate):
        """
        Sets the voicemail_greeting_alternate of this ReplaceExtensionParams.
        Recording lookup object

        :param voicemail_greeting_alternate: The voicemail_greeting_alternate of this ReplaceExtensionParams.
        :type: object
        """

        self._voicemail_greeting_alternate = voicemail_greeting_alternate

    @property
    def name_greeting(self):
        """
        Gets the name_greeting of this ReplaceExtensionParams.
        Recording lookup object

        :return: The name_greeting of this ReplaceExtensionParams.
        :rtype: object
        """
        return self._name_greeting

    @name_greeting.setter
    def name_greeting(self, name_greeting):
        """
        Sets the name_greeting of this ReplaceExtensionParams.
        Recording lookup object

        :param name_greeting: The name_greeting of this ReplaceExtensionParams.
        :type: object
        """

        self._name_greeting = name_greeting

    @property
    def name(self):
        """
        Gets the name of this ReplaceExtensionParams.
        Name (required)

        :return: The name of this ReplaceExtensionParams.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this ReplaceExtensionParams.
        Name (required)

        :param name: The name of this ReplaceExtensionParams.
        :type: str
        """

        self._name = name

    @property
    def timezone(self):
        """
        Gets the timezone of this ReplaceExtensionParams.
        Timezone

        :return: The timezone of this ReplaceExtensionParams.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """
        Sets the timezone of this ReplaceExtensionParams.
        Timezone

        :param timezone: The timezone of this ReplaceExtensionParams.
        :type: str
        """

        self._timezone = timezone

    @property
    def include_in_directory(self):
        """
        Gets the include_in_directory of this ReplaceExtensionParams.
        Include in dial-by-name directory

        :return: The include_in_directory of this ReplaceExtensionParams.
        :rtype: bool
        """
        return self._include_in_directory

    @include_in_directory.setter
    def include_in_directory(self, include_in_directory):
        """
        Sets the include_in_directory of this ReplaceExtensionParams.
        Include in dial-by-name directory

        :param include_in_directory: The include_in_directory of this ReplaceExtensionParams.
        :type: bool
        """

        self._include_in_directory = include_in_directory

    @property
    def extension(self):
        """
        Gets the extension of this ReplaceExtensionParams.
        Extension number (required)

        :return: The extension of this ReplaceExtensionParams.
        :rtype: int
        """
        return self._extension

    @extension.setter
    def extension(self, extension):
        """
        Sets the extension of this ReplaceExtensionParams.
        Extension number (required)

        :param extension: The extension of this ReplaceExtensionParams.
        :type: int
        """

        self._extension = extension

    @property
    def enable_outbound_calls(self):
        """
        Gets the enable_outbound_calls of this ReplaceExtensionParams.
        Enable outgoing calls

        :return: The enable_outbound_calls of this ReplaceExtensionParams.
        :rtype: bool
        """
        return self._enable_outbound_calls

    @enable_outbound_calls.setter
    def enable_outbound_calls(self, enable_outbound_calls):
        """
        Sets the enable_outbound_calls of this ReplaceExtensionParams.
        Enable outgoing calls

        :param enable_outbound_calls: The enable_outbound_calls of this ReplaceExtensionParams.
        :type: bool
        """

        self._enable_outbound_calls = enable_outbound_calls

    @property
    def usage_type(self):
        """
        Gets the usage_type of this ReplaceExtensionParams.
        Extension type

        :return: The usage_type of this ReplaceExtensionParams.
        :rtype: str
        """
        return self._usage_type

    @usage_type.setter
    def usage_type(self, usage_type):
        """
        Sets the usage_type of this ReplaceExtensionParams.
        Extension type

        :param usage_type: The usage_type of this ReplaceExtensionParams.
        :type: str
        """

        self._usage_type = usage_type

    @property
    def voicemail_password(self):
        """
        Gets the voicemail_password of this ReplaceExtensionParams.
        Voicemail password

        :return: The voicemail_password of this ReplaceExtensionParams.
        :rtype: int
        """
        return self._voicemail_password

    @voicemail_password.setter
    def voicemail_password(self, voicemail_password):
        """
        Sets the voicemail_password of this ReplaceExtensionParams.
        Voicemail password

        :param voicemail_password: The voicemail_password of this ReplaceExtensionParams.
        :type: int
        """

        self._voicemail_password = voicemail_password

    @property
    def full_name(self):
        """
        Gets the full_name of this ReplaceExtensionParams.
        Contact name

        :return: The full_name of this ReplaceExtensionParams.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """
        Sets the full_name of this ReplaceExtensionParams.
        Contact name

        :param full_name: The full_name of this ReplaceExtensionParams.
        :type: str
        """

        self._full_name = full_name

    @property
    def enable_call_waiting(self):
        """
        Gets the enable_call_waiting of this ReplaceExtensionParams.
        Enable Call Waiting

        :return: The enable_call_waiting of this ReplaceExtensionParams.
        :rtype: bool
        """
        return self._enable_call_waiting

    @enable_call_waiting.setter
    def enable_call_waiting(self, enable_call_waiting):
        """
        Sets the enable_call_waiting of this ReplaceExtensionParams.
        Enable Call Waiting

        :param enable_call_waiting: The enable_call_waiting of this ReplaceExtensionParams.
        :type: bool
        """

        self._enable_call_waiting = enable_call_waiting

    @property
    def voicemail_greeting_standard(self):
        """
        Gets the voicemail_greeting_standard of this ReplaceExtensionParams.
        Recording lookup object

        :return: The voicemail_greeting_standard of this ReplaceExtensionParams.
        :rtype: object
        """
        return self._voicemail_greeting_standard

    @voicemail_greeting_standard.setter
    def voicemail_greeting_standard(self, voicemail_greeting_standard):
        """
        Sets the voicemail_greeting_standard of this ReplaceExtensionParams.
        Recording lookup object

        :param voicemail_greeting_standard: The voicemail_greeting_standard of this ReplaceExtensionParams.
        :type: object
        """

        self._voicemail_greeting_standard = voicemail_greeting_standard

    @property
    def voicemail_greeting_type(self):
        """
        Gets the voicemail_greeting_type of this ReplaceExtensionParams.
        Voicemail greeting type

        :return: The voicemail_greeting_type of this ReplaceExtensionParams.
        :rtype: str
        """
        return self._voicemail_greeting_type

    @voicemail_greeting_type.setter
    def voicemail_greeting_type(self, voicemail_greeting_type):
        """
        Sets the voicemail_greeting_type of this ReplaceExtensionParams.
        Voicemail greeting type

        :param voicemail_greeting_type: The voicemail_greeting_type of this ReplaceExtensionParams.
        :type: str
        """

        self._voicemail_greeting_type = voicemail_greeting_type

    @property
    def caller_id(self):
        """
        Gets the caller_id of this ReplaceExtensionParams.
        Caller ID

        :return: The caller_id of this ReplaceExtensionParams.
        :rtype: str
        """
        return self._caller_id

    @caller_id.setter
    def caller_id(self, caller_id):
        """
        Sets the caller_id of this ReplaceExtensionParams.
        Caller ID

        :param caller_id: The caller_id of this ReplaceExtensionParams.
        :type: str
        """

        self._caller_id = caller_id

    @property
    def local_area_code(self):
        """
        Gets the local_area_code of this ReplaceExtensionParams.
        Local area code

        :return: The local_area_code of this ReplaceExtensionParams.
        :rtype: int
        """
        return self._local_area_code

    @local_area_code.setter
    def local_area_code(self, local_area_code):
        """
        Sets the local_area_code of this ReplaceExtensionParams.
        Local area code

        :param local_area_code: The local_area_code of this ReplaceExtensionParams.
        :type: int
        """

        self._local_area_code = local_area_code

    @property
    def voicemail_enabled(self):
        """
        Gets the voicemail_enabled of this ReplaceExtensionParams.
        Voicemail enabled

        :return: The voicemail_enabled of this ReplaceExtensionParams.
        :rtype: bool
        """
        return self._voicemail_enabled

    @voicemail_enabled.setter
    def voicemail_enabled(self, voicemail_enabled):
        """
        Sets the voicemail_enabled of this ReplaceExtensionParams.
        Voicemail enabled

        :param voicemail_enabled: The voicemail_enabled of this ReplaceExtensionParams.
        :type: bool
        """

        self._voicemail_enabled = voicemail_enabled

    @property
    def voicemail_greeting_enable_leave_message_prompt(self):
        """
        Gets the voicemail_greeting_enable_leave_message_prompt of this ReplaceExtensionParams.
        Use leave message prompt after voicemail

        :return: The voicemail_greeting_enable_leave_message_prompt of this ReplaceExtensionParams.
        :rtype: bool
        """
        return self._voicemail_greeting_enable_leave_message_prompt

    @voicemail_greeting_enable_leave_message_prompt.setter
    def voicemail_greeting_enable_leave_message_prompt(self, voicemail_greeting_enable_leave_message_prompt):
        """
        Sets the voicemail_greeting_enable_leave_message_prompt of this ReplaceExtensionParams.
        Use leave message prompt after voicemail

        :param voicemail_greeting_enable_leave_message_prompt: The voicemail_greeting_enable_leave_message_prompt of this ReplaceExtensionParams.
        :type: bool
        """

        self._voicemail_greeting_enable_leave_message_prompt = voicemail_greeting_enable_leave_message_prompt

    @property
    def voicemail_transcription(self):
        """
        Gets the voicemail_transcription of this ReplaceExtensionParams.
        Voicemail transcription type

        :return: The voicemail_transcription of this ReplaceExtensionParams.
        :rtype: str
        """
        return self._voicemail_transcription

    @voicemail_transcription.setter
    def voicemail_transcription(self, voicemail_transcription):
        """
        Sets the voicemail_transcription of this ReplaceExtensionParams.
        Voicemail transcription type

        :param voicemail_transcription: The voicemail_transcription of this ReplaceExtensionParams.
        :type: str
        """

        self._voicemail_transcription = voicemail_transcription

    @property
    def voicemail_notifications_emails(self):
        """
        Gets the voicemail_notifications_emails of this ReplaceExtensionParams.
        Email notifications for voicemails. Can be a single email or an array of emails

        :return: The voicemail_notifications_emails of this ReplaceExtensionParams.
        :rtype: list[str]
        """
        return self._voicemail_notifications_emails

    @voicemail_notifications_emails.setter
    def voicemail_notifications_emails(self, voicemail_notifications_emails):
        """
        Sets the voicemail_notifications_emails of this ReplaceExtensionParams.
        Email notifications for voicemails. Can be a single email or an array of emails

        :param voicemail_notifications_emails: The voicemail_notifications_emails of this ReplaceExtensionParams.
        :type: list[str]
        """

        self._voicemail_notifications_emails = voicemail_notifications_emails

    @property
    def voicemail_notifications_sms(self):
        """
        Gets the voicemail_notifications_sms of this ReplaceExtensionParams.
        SMS notifications for voicemails

        :return: The voicemail_notifications_sms of this ReplaceExtensionParams.
        :rtype: str
        """
        return self._voicemail_notifications_sms

    @voicemail_notifications_sms.setter
    def voicemail_notifications_sms(self, voicemail_notifications_sms):
        """
        Sets the voicemail_notifications_sms of this ReplaceExtensionParams.
        SMS notifications for voicemails

        :param voicemail_notifications_sms: The voicemail_notifications_sms of this ReplaceExtensionParams.
        :type: str
        """

        self._voicemail_notifications_sms = voicemail_notifications_sms

    @property
    def call_notifications_emails(self):
        """
        Gets the call_notifications_emails of this ReplaceExtensionParams.
        Email notifications for calls. Can be a single email or an array of emails

        :return: The call_notifications_emails of this ReplaceExtensionParams.
        :rtype: list[str]
        """
        return self._call_notifications_emails

    @call_notifications_emails.setter
    def call_notifications_emails(self, call_notifications_emails):
        """
        Sets the call_notifications_emails of this ReplaceExtensionParams.
        Email notifications for calls. Can be a single email or an array of emails

        :param call_notifications_emails: The call_notifications_emails of this ReplaceExtensionParams.
        :type: list[str]
        """

        self._call_notifications_emails = call_notifications_emails

    @property
    def call_notifications_sms(self):
        """
        Gets the call_notifications_sms of this ReplaceExtensionParams.
        SMS notifications for calls

        :return: The call_notifications_sms of this ReplaceExtensionParams.
        :rtype: str
        """
        return self._call_notifications_sms

    @call_notifications_sms.setter
    def call_notifications_sms(self, call_notifications_sms):
        """
        Sets the call_notifications_sms of this ReplaceExtensionParams.
        SMS notifications for calls

        :param call_notifications_sms: The call_notifications_sms of this ReplaceExtensionParams.
        :type: str
        """

        self._call_notifications_sms = call_notifications_sms

    @property
    def route(self):
        """
        Gets the route of this ReplaceExtensionParams.
        Route object lookup (must belong to this extension)

        :return: The route of this ReplaceExtensionParams.
        :rtype: list[str]
        """
        return self._route

    @route.setter
    def route(self, route):
        """
        Sets the route of this ReplaceExtensionParams.
        Route object lookup (must belong to this extension)

        :param route: The route of this ReplaceExtensionParams.
        :type: list[str]
        """

        self._route = route

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ReplaceExtensionParams):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
